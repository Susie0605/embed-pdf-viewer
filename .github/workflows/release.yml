name: Release

on:
  push:
    branches: [main]
    paths:
      - "packages/**"
      - ".changeset/**"
      - "pnpm-lock.yaml"
  workflow_dispatch: {}

concurrency:
  group: release
  cancel-in-progress: false

permissions:
  contents: write
  id-token: write
  pull-requests: write
  
env:
  CI: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN:    ${{ secrets.NPM_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 10.4.0
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          registry-url: "https://registry.npmjs.org"

      - run: pnpm install --frozen-lockfile
      - run: pnpm run build:packages

      # 收集构建产物并压缩
      - name: 准备发布资产
        run: |
          # 创建临时目录存放发布资产
          mkdir -p release-assets
          
          # 复制所有构建产物到临时目录
          for pkg in packages/*; do
            if [ -d "$pkg/dist" ]; then
              pkg_name=$(basename "$pkg")
              # 压缩每个包的dist目录
              zip -r "release-assets/$pkg_name-dist.zip" "$pkg/dist"
              tar -czf "release-assets/$pkg_name-dist.tar.gz" -C "$pkg" dist
            fi
          done
          
          # 显示收集的资产列表
          echo "准备发布的资产:"
          ls -la release-assets/

      - name: 版本更新
        id: changesets
        uses: changesets/action@v1
        with:
          commit: "chore: version packages"
          title:  "chore: version packages"
          version: pnpm ci:version
          publish: echo "准备发布到GitHub Releases"

      # 创建GitHub Release并上传资产
      - name: 创建GitHub Release
        if: steps.changesets.outputs.published == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.changesets.outputs.tag }}
          body_path: CHANGELOG.md
          # 上传所有准备好的资产
          files: |
            release-assets/*.zip
            release-assets/*.tar.gz
          draft: false
          prerelease: false
    
