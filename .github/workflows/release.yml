name: Release

# 1️⃣ 何时运行
# ──────────────────────────────────────────────────────────────────────
on:
  push:
    branches: [main]          # 仅在代码合并到main后运行
    paths:                    # 忽略仅修改网站/文档的提交
      - "packages/**"
      - ".changeset/**"
      - "pnpm-lock.yaml"
  workflow_dispatch: {}       # 允许手动触发

# 2️⃣ 每次只运行一个发布任务
# ──────────────────────────────────────────────────────────────────────
concurrency:
  group: release
  cancel-in-progress: false

permissions:
  contents: write             # 创建标签、发布和版本更新PR
  id-token: write             # 用于npm发布的来源验证
  pull-requests: write         # 创建版本更新PR
  
env:
  CI: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN:    ${{ secrets.NPM_TOKEN }}

    steps:
      # ─── 检出代码仓库 ────────────────────────────────────────
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史以便正确生成变更日志

      # ─── 设置PNPM 10.4.0 ───────────
      - uses: pnpm/action-setup@v4
        with:
          version: 10.4.0
          run_install: false

      # ─── 设置Node并缓存pnpm存储 ──────────────────────
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          registry-url: "https://registry.npmjs.org"

      # ─── 安装依赖 (根目录 + 工作区) ──────────────────────────
      - run: pnpm install --frozen-lockfile
      - run: pnpm run build:packages

      # ─── 版本更新PR和准备发布 (Changesets处理) ──────────────
      - name: 版本更新和准备发布
        id: changesets
        uses: changesets/action@v1
        with:
          commit: "chore: version packages"
          title:  "chore: version packages"
          # 仅版本化，不直接发布到npm
          publish: echo "准备发布到GitHub Releases"
          version: pnpm ci:version  # 确保在package.json中定义此脚本

      # ─── 如果有新版本，创建GitHub Release ──────────────
      - name: 创建GitHub Release
        if: steps.changesets.outputs.published == 'true'
        uses: softprops/action-gh-release@v2
        with:
          # 使用Changesets生成的版本号作为标签
          tag_name: ${{ steps.changesets.outputs.tag }}
          # 从CHANGELOG.md获取发布说明
          body_path: CHANGELOG.md
          # 上传构建产物
          files: |
            packages/*/dist/*.tar.gz
            packages/*/dist/*.zip
          draft: false
          prerelease: false
    
